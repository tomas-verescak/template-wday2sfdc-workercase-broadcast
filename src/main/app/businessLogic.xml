<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" 
	xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xmlns:spring="http://www.springframework.org/schema/beans"
    version="EE-3.7.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    
    <batch:job name="businessLogicBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="Find_Organization_Name">
                <enricher source="payload" target="recordVars.organizationName" doc:name="Store in 'recordVars.organizationName'">
                    <set-payload value="#[payload.orgIds.isEmpty() ? null : payload.orgIds[0].name]" doc:name="Extract organization name from payload"/>


                </enricher>
<!--                 <data-mapper:transform config-ref="List_WorkerType__To_List_Case_" doc:name="List&lt;WorkerType&gt; To List&lt;Case&gt;"/> -->

        
            </batch:step>
            <batch:step name="Get_Case_If_Exists" accept-expression="#[payload.ExtId__c != null]">
                <enricher source="payload == null ? null : payload.Id" target="payload.Id" doc:name="Enrich payload with existing SFDC Case Id">
                    <sfdc:query-single config-ref="Salesforce" query="SELECT Id FROM Case WHERE ExtId__c = '#[payload.ExtId__c]' and ExtId__c != null" doc:name="Query Salesforce Case"/>
                </enricher>
            </batch:step>
            <batch:step name="Get_Account_Id">
                <flow-ref name="findOrCreateAccountFlow" doc:name="findOrCreateAccountFlow"/>
            </batch:step>
            <batch:step name="Get_Contact_Id">
                <flow-ref name="findOrCreateContactFlow" doc:name="findOrCreateContactFlow"/>
            </batch:step>
            <batch:step name="Upsert_Case_To_Salesforce">

                <batch:commit size="200" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Prepare for upsert">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $ 
- 'orgIds' 
- 'LastModifiedDate' 
++ 'Description' : p('sfdc.description')]]></dw:set-payload>
                    </dw:transform-message>
                    <logger message="Cases to be upserted: #[payload]" level="INFO" doc:name="Log cases to be  upserted"/>
                    <sfdc:upsert config-ref="Salesforce" externalIdFieldName="Id" type="Case" doc:name="Upsert Case">
                        <sfdc:objects ref="#[payload]"/>
                    </sfdc:upsert>

                </batch:commit>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name="Batch result to JSON"/>
            <logger message="Batch completed: #[payload]" level="INFO" doc:name="Log the batch results"/>
        </batch:on-complete>
    </batch:job>

	<sub-flow name="findOrCreateAccountFlow" >
        <choice doc:name="Is organization name available in the input?">
            <when expression="#[recordVars.organizationName != null]">
                <enricher source="#[payload]" target="#[recordVars.account]" doc:name="store in 'recordVars.account'">
                    <sfdc:query-single config-ref="Salesforce" query="SELECT Id, Name FROM Account WHERE Name = '#[recordVars.organizationName]'" doc:name="Query Account in  Salesforce Instance"/>
                </enricher>
                <choice doc:name="Does the corresponding account need to be created?">
                    <when expression="#[recordVars.account == null]">
                        <enricher source="#[payload[0].getId()]" target="#[payload.AccountId]" doc:name="enrich payload with newly created Account ID">
                            <sfdc:create config-ref="Salesforce" type="Account" doc:name="Create Account in Salesforce Instance">
                                <sfdc:objects>
                                    <sfdc:object>
                                        <sfdc:inner-object key="Name">#[recordVars.organizationName]</sfdc:inner-object>
                                        <sfdc:inner-object key="NumberOfEmployees">0</sfdc:inner-object>
                                    </sfdc:object>
                                </sfdc:objects>
                            </sfdc:create>
                        </enricher>

                    </when>
                    <otherwise>
                        <enricher target="#[payload.AccountId]" doc:name="enrich payload with existing Account ID">
                            <set-payload value="#[recordVars.account.Id]" doc:name="Get existing Account ID"/>

                        </enricher>
                    </otherwise>
                </choice>

            </when>
            <otherwise>
                <logger message="There is no organization for this worker. Doing nothing." level="INFO" doc:name="Nothing to do here"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="findOrCreateContactFlow">
        <enricher source="#[payload]" target="#[recordVars.contact]" doc:name="store in 'recordVars.contact'">
            <sfdc:query-single config-ref="Salesforce" query="SELECT Id, Name FROM Contact WHERE Email = '#[payload.SuppliedEmail]'" doc:name="Query Contact in Salesforce Instance"/>
        </enricher>
        <choice doc:name="Does the corresponding contact need to be created?">
            <when expression="#[recordVars.contact == null]">
                <enricher target="#[payload.ContactId]"	doc:name="Enrich payload with newly created Contact ID" source="#[payload[0].getId()]">
					<sfdc:create config-ref="Salesforce" type="Contact" doc:name="Create Contact in Salesforce Instance">
						<sfdc:objects>
							<sfdc:object>
								<sfdc:inner-object key="Email">payload.SuppliedEmail</sfdc:inner-object>
								<sfdc:inner-object key="LastName">payload.SuppliedName</sfdc:inner-object>
							</sfdc:object>
						</sfdc:objects>
					</sfdc:create>
				</enricher>
            </when>
            <otherwise>
                <enricher target="#[payload.ContactId]" doc:name="enrich payload with existing Contact ID">
                    <set-payload value="#[recordVars.contact.Id]" doc:name="Get existing Contact ID"/>
                </enricher>
            </otherwise>
        </choice>
    </sub-flow>
    
</mule>
